#!/usr/bin/expect -f

# Geodat-mittaustiedon (Job/Area/U.D.S.) tuonti ja vienti sarjaportin (RS232) kautta
# (c) 2015 Antti Hautaniemi

# Yhteensopivuus: Expect (for Windows NT) 5.21 / TCL 8.0

# Tutki, ollaanko Windows- vai Unix-ympäristössä
if {[string match Windows* "$tcl_platform(os)"]} {

	# Hakemisto, josta tiedostoja viedään laitteelle ja tuodaan laitteelta
	set tyohakemisto C:\\DATA
	# Portit, joista Geodat-laitteita etsitään
	set sarjaportit [list COM1 COM2 COM3 COM4 COM5 COM6 COM7 COM8 COM9 COM10 COM11 COM12 COM13 COM14 COM15]
	# Rivinvaihdot (crlf / lf)
	set rivinvaihdot { binary crlf }

} else {
	set tyohakemisto ~/data
	set sarjaportit [glob -nocomplain /dev/{cu.usbserial,tty{S*,USBS*}}]
	set rivinvaihdot { binary lf }
}

# Laitteeseen asetettu tiedonsiirtoprotokolla (baud-nopeus, pariteetti:(n)one/(o)dd/(e)ven/(m)ark/(s)pace, databitit, stop-bitit)
set sarjaprotokolla 9600,n,8,1



##########################
# Ohjelmakoodi alkaa tästä

log_user 0
set send_slow {1024 .01}
set timeout 600

set areat [list]
set jobit [list]
set udsit [list]
set vapaa_muisti 0
set perustoiminnot 0

proc yhteysvirhe {} {
	send_user "\nYhteys laitteeseen katkesi! "
	expect_user \n {exit}
}

# Lataa luettelot laitteella olevista tiedostoista
proc lataa_luettelot {} {
	global areat jobit udsit vapaa_muisti perustoiminnot
	set areat [list]
	set jobit [list]
	set udsit [list]
		
	expect *
	
	send -s M\r
	expect -timeout 5 -re (.+)\r\n> {
		set vapaa_muisti $expect_out(1,string);
	} timeout { yhteysvirhe }
	
	send -s O*C\r
	expect -timeout 5 -re 15=(.+)\r\n {
		lappend areat $expect_out(1,string); exp_continue;
	} -re 50=(.+)\r\n {
		lappend jobit $expect_out(1,string); exp_continue;
	} timeout { yhteysvirhe } >

	if {! $perustoiminnot } {

		# lataa U.D.S.-luettelo vain valikkotilassa
		send -s OUC\r
		expect -timeout 5 -re 42=(.+)\r\n {
			lappend udsit $expect_out(1,string); exp_continue;
		} timeout { yhteysvirhe } >
	}
}

# Tiedostojen tuonti, vienti ja tuhoaminen
proc tuonti {luettelo tunnus tarkenne koodi} {
	global tyohakemisto
	foreach tiedosto $luettelo {
		send_user "Tuo $tunnus $tiedosto (k/E)? "
		expect_user -re "(k|K)\r?\n" {
			if { [catch {open [file join $tyohakemisto $tiedosto.$tarkenne] w} tuloste] } {
				send_user "Tiedostoon ei voitu tallentaa\n"
				continue
			}
			
			sleep 1; expect *
			send -s O$koodi=$tiedosto\r
			expect -timeout 5 -re (.*)\r\n { puts $tuloste "$expect_out(1,string)"; exp_continue
			} timeout { yhteysvirhe } >
			
			close $tuloste
			send_user "Valmis\n"
		} \n
	}
}
proc vienti {tunnus tarkenne koodi} {
	global tyohakemisto
	foreach tiedostopolku [glob -nocomplain [file join $tyohakemisto *]] {
		if {[string match "*.$tarkenne" [string tolower $tiedostopolku]]} {
			set tiedosto [file rootname [file tail $tiedostopolku]]
			send_user "Vie $tiedostopolku (k/E)? "
			expect_user -re "(k|K)\r?\n" {
				if { [catch {open $tiedostopolku r} syote] } {
					send_user "Tiedostoa ei voitu lukea\n"
					continue
				}
				
				sleep 1; expect *
				send -s L$koodi=$tiedosto\r
				expect -timeout 5 -ex * { send -s [read $syote]; send -s ">"; exp_continue
				} timeout { yhteysvirhe } >
				
				close $syote
				send_user "Valmis\n"
			} \n
		}
	}
}
proc poisto {luettelo tunnus koodi} {
	foreach tiedosto $luettelo {
		send_user "Tuhoa $tunnus $tiedosto (k/E)? "
		expect_user -re "(k|K)\r?\n" {
			sleep 1; expect *
			send -s K$koodi=$tiedosto\r
			expect -timeout 5 timeout { yhteysvirhe } >
		} \n
	}
}

# Käyttäjälle tulostettavat otsikot (valikkotilassa)
proc paaotsikko {} {
	global sarjaportti vapaa_muisti
	send_user "\nGeodat-laite portissa $sarjaportti, $vapaa_muisti tavua vapaana\n"
}
proc area_otsikko {} {
	global areat
	send_user "\nArea-tiedostot : $areat\n"
}
proc job_otsikko {} {
	global jobit
	send_user "\nJob-tiedostot : $jobit\n"
}
proc uds_otsikko {} {
	global udsit
	send_user "\nU.D.S.-tiedostot : $udsit\n"
}
proc hakemisto_komennot {} {
	send_user "Hakemisto: (A)rea / (J)ob / (U).D.S. / poistu:(Enter)? "
}
proc tiedosto_komennot {} {
	send_user "Komento: (T)uo / (V)ie / (P)oista / poistu:(Enter)? "
}

# Pääohjelma :

# Varmistetaan ja tarvittaessa luodaan työhakemisto
if {[file exists $tyohakemisto] && ! [file isdirectory $tyohakemisto]} {
	send_user "$tyohakemisto ei ole hakemisto, ei voida jatkaa! "
	expect_user \n {exit}
}

while {! [file exists $tyohakemisto]} {
	send_user "Luodaanko hakemisto $tyohakemisto (k/E)? "
	expect_user -re "(k|K)\r?\n" {
		if {[catch {file mkdir $tyohakemisto}]} {
			send_user "Luonti epäonnistui, ei voida jatkaa! "
			expect_user \n {exit}
		} else {break}
	} \n {
		send_user "Ei voida jatkaa! "
		expect_user \n {exit}
	}
}

# Etsi Geodat-laitteita tietokoneen sarjaporteista (rivinvaihto asettaa valikkotilan päälle)
send_user "Muodostetaan yhteys laitteeseen... "
expect_user -timeout 2 \n {set perustoiminnot 0} timeout {set perustoiminnot 1}

foreach sarjaportti [concat $sarjaportit ei_laitetta] {

	# Yritetään avata tiedostokahva
	if {[catch {open $sarjaportti r+} kahva]} {continue}
	fconfigure $kahva -mode $sarjaprotokolla -buffering none -blocking 0 -translation $rivinvaihdot
	spawn -noecho -open $kahva

	# Kokeile vastaako laite muistimäärän kyselyyn
	sleep 1; expect *
	send -s M\r
	expect -timeout 5 > {
		# Hyväksytään ensimmäinen löydetty laite
		send_user "$sarjaportti\n"
		break
	}
	
	# Suljetaan tiedostokahva ja siirrytään seuraavaan porttiin
	close
}

if {$sarjaportti == "ei_laitetta"} {
	send_user "\nGeodat-laitteita ei tunnistettu! "
	expect_user \n {exit}
}

lataa_luettelot

if {$perustoiminnot} {

	# Yksinkertainen työnkulku: tuo JOB, tuhoa JOB&AREA, vie AREA
	send_user "\nArea-tiedostot: $areat\n"
	send_user "Job-tiedostot: $jobit\n\n"
	tuonti $jobit JOB job M
	send_user \n
	poisto $jobit JOB M
	send_user \n
	poisto $areat AREA I
	send_user \n
	vienti AREA are I

} else {

	# Edistyneet toiminnot: hakemistoittainen valikkorakenne
	paaotsikko
	hakemisto_komennot
	expect_user -re "(a|A)\r?\n" {
		area_otsikko
		tiedosto_komennot
		expect_user {
			-re "(t|T)\r?\n" {tuonti $areat AREA are I; area_otsikko; tiedosto_komennot; exp_continue}
			-re "(v|V)\r?\n" {vienti AREA are I; lataa_luettelot; area_otsikko; tiedosto_komennot; exp_continue}
			-re "(p|P)\r?\n" {poisto $areat AREA I; lataa_luettelot; area_otsikko; tiedosto_komennot; exp_continue}
			\n
		}
		paaotsikko
		hakemisto_komennot
		exp_continue
	} -re "(j|J)\r?\n" {
		job_otsikko
		tiedosto_komennot
		expect_user {
			-re "(t|T)\r?\n" {tuonti $jobit JOB job M; job_otsikko; tiedosto_komennot; exp_continue}
			-re "(v|V)\r?\n" {vienti JOB job M; lataa_luettelot; job_otsikko; tiedosto_komennot; exp_continue}
			-re "(p|P)\r?\n" {poisto $jobit JOB M; lataa_luettelot; job_otsikko; tiedosto_komennot; exp_continue}
			\n
		}
		paaotsikko
		hakemisto_komennot
		exp_continue
	} -re "(u|U)\r?\n" {
		uds_otsikko
		tiedosto_komennot
		expect_user {
			-re "(t|T)\r?\n" {tuonti $udsit U.D.S. uds U; uds_otsikko; tiedosto_komennot; exp_continue}
			-re "(v|V)\r?\n" {vienti U.D.S. uds U; lataa_luettelot; uds_otsikko; tiedosto_komennot; exp_continue}
			-re "(p|P)\r?\n" {poisto $udsit U.D.S. U; lataa_luettelot; uds_otsikko; tiedosto_komennot; exp_continue}
			\n
		}
		paaotsikko
		hakemisto_komennot
		exp_continue
	} \n
}

# Sulje lopuksi tiedostokahva
close
